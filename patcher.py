#!/usr/bin/env python
# Script by Alexandre-Xavier Labonte-Lamoureux aka AXDOOMER (2017)

# Imports
import sys
import os

# Patches
SENSHACK = [
	[0x00064972, 0x0A, 0x11],
	[0x00064C8F, 0x09, 0x7F],
	[0x00064E14, 0x8D, 0x66],
	[0x00064E15, 0x34, 0x81],
	[0x00064E16, 0xF5, 0xFD],
	[0x00064E17, 0x00, 0x85],
	[0x00064E19, 0x00, 0x75],
	[0x00064E1A, 0x00, 0x4F],
	[0x00064E6B, 0x80, 0x34],
	[0x00064E6C, 0x00, 0xF5],
	[0x00064E70, 0x8D, 0x00],
	[0x00064E71, 0x54, 0xEB],
	[0x00064E72, 0x22, 0xA8],
	[0x00064E73, 0x00, 0x90]
]

HEAPSIZE = [
	[0x0005CCA8, 0x80, 0x00],
	[0x0005CCA9, 0x00, 0x02],
	[0x0005CCAF, 0x80, 0x00],
	[0x0005CCB0, 0x00, 0x02]
]

MEDINEED = [
	[0x0006BE7B, 0x19, 0x32]
]

DOORREOPEN = [
	[0x000688C7, 0x14, 0x58]
]

FASTTWOSND = [
	[0x00068926, 0xE8, 0x90],
	[0x00068927, 0x59, 0x90],
	[0x00068928, 0x8A, 0x90],
	[0x00068929, 0x01, 0x90],
	[0x0006892A, 0x00, 0x90]
]

OUCHFACE = [
	[0x0007C08C, 0x29, 0x2B]
]

NOQ = [
	[0x000638F6, 0x74, 0xEB]
]

DSCHGUN = [
	[0x00040F95, 0xB0, 0xC8],
	[0x00040F98, 0xB0, 0x00],
	[0x00040F99, 0x48, 0x4E],
	[0x00040F9A, 0x01, 0x02],
	[0x0009D4C4, 0xB0, 0x00],
	[0x0009D4C5, 0x48, 0x00],
	[0x0009D4C6, 0x01, 0x00]
]

EXTSTACK = [
	[0x00027AF2, 0x08, 0x10],
	[0x00027BC2, 0x08, 0x10]
]

SNDPITCH = [
	[0x0005628C, 0x8B, 0xE9],
	[0x0005628D, 0x59, 0xCA],
	[0x0005628E, 0x1A, 0x00],
	[0x0005628F, 0x8B, 0x00],
	[0x00056290, 0x71, 0x00],
	[0x0005D2CA, 0x5C, 0x54],
	[0x0005D2CE, 0xCA, 0xCB]
]

DOOMPLUS = [
	[0x00027B90, 0x71, 0xA6],
	[0x00027BC0, 0x10, 0x00],
	[0x00027BC1, 0x5E, 0xF0],
	[0x00027BC2, 0x08, 0x1A],
	[0x00037059, 0x40, 0x00],
	[0x0003705A, 0xC0, 0x00],
	[0x0003705B, 0x02, 0x16],
	[0x00037062, 0x40, 0x00],
	[0x00037063, 0xC0, 0x00],
	[0x00037064, 0x02, 0x16],
	[0x00037074, 0x40, 0x00],
	[0x00037075, 0xC0, 0x00],
	[0x00037076, 0x02, 0x16],
	[0x0003707D, 0x40, 0x00],
	[0x0003707E, 0xC0, 0x00],
	[0x0003707F, 0x02, 0x16],
	[0x00037086, 0x40, 0x00],
	[0x00037087, 0xC0, 0x00],
	[0x00037088, 0x02, 0x16],
	[0x0003708F, 0x40, 0x00],
	[0x00037090, 0xC0, 0x00],
	[0x00037091, 0x02, 0x16],
	[0x00037098, 0x40, 0x00],
	[0x00037099, 0xC0, 0x00],
	[0x0003709A, 0x02, 0x16],
	[0x000370A1, 0x40, 0x00],
	[0x000370A2, 0xC0, 0x00],
	[0x000370A3, 0x02, 0x16],
	[0x000370AA, 0x40, 0x00],
	[0x000370AB, 0xC0, 0x00],
	[0x000370AC, 0x02, 0x16],
	[0x000370B3, 0x40, 0x00],
	[0x000370B4, 0xC0, 0x00],
	[0x000370B5, 0x02, 0x16],
	[0x000373C2, 0x40, 0x00],
	[0x000373C3, 0xC0, 0x00],
	[0x000373C4, 0x02, 0x16],
	[0x000373CB, 0x40, 0x00],
	[0x000373CC, 0xC0, 0x00],
	[0x000373CD, 0x02, 0x16],
	[0x000373D4, 0x40, 0x00],
	[0x000373D5, 0xC0, 0x00],
	[0x000373D6, 0x02, 0x16],
	[0x00037B9C, 0x70, 0x00],
	[0x00037B9D, 0xC4, 0x70],
	[0x00037B9E, 0x02, 0x17],
	[0x000388A7, 0x40, 0x00],
	[0x000388A8, 0xC0, 0x00],
	[0x000388A9, 0x02, 0x16],
	[0x000388C2, 0x70, 0x00],
	[0x000388C3, 0xC4, 0x70],
	[0x000388C4, 0x02, 0x17],
	[0x000395FE, 0xA0, 0x00],
	[0x000395FF, 0xD0, 0x60],
	[0x00039600, 0x02, 0x13],
	[0x0003ADA9, 0xE0, 0x00],
	[0x0003ADAA, 0xA1, 0x00],
	[0x0003ADAB, 0x03, 0x09],
	[0x0003ADBB, 0x40, 0x00],
	[0x0003ADBC, 0x01, 0x70],
	[0x0003ADBD, 0x05, 0x18],
	[0x0003ADD6, 0xE0, 0x00],
	[0x0003ADD7, 0xA1, 0x00],
	[0x0003ADD8, 0x03, 0x09],
	[0x0003ADF1, 0xA0, 0x00],
	[0x0003ADF2, 0xD0, 0x60],
	[0x0003ADF3, 0x02, 0x13],
	[0x0003B041, 0x40, 0x00],
	[0x0003B042, 0x01, 0x70],
	[0x0003B043, 0x05, 0x18],
	[0x0003B04A, 0xE0, 0x00],
	[0x0003B04B, 0xA1, 0x00],
	[0x0003B04C, 0x03, 0x09],
	[0x0003B0B6, 0xE0, 0x00],
	[0x0003B0B7, 0xA1, 0x00],
	[0x0003B0B8, 0x03, 0x09],
	[0x0003B0BF, 0xE0, 0x00],
	[0x0003B0C0, 0xA1, 0x00],
	[0x0003B0C1, 0x03, 0x09],
	[0x0003B10E, 0x10, 0x00],
	[0x0003B10F, 0xC0, 0x70],
	[0x0003B110, 0x05, 0x17],
	[0x0003B22E, 0x10, 0x00],
	[0x0003B22F, 0xC0, 0x70],
	[0x0003B230, 0x05, 0x17],
	[0x0003B240, 0x10, 0x00],
	[0x0003B241, 0xA2, 0x80],
	[0x0003B242, 0x05, 0x16],
	[0x0003BD36, 0xA0, 0x00],
	[0x0003BD37, 0xD0, 0x60],
	[0x0003BD38, 0x02, 0x13],
	[0x0003BD48, 0xA0, 0x00],
	[0x0003BD49, 0xD0, 0x60],
	[0x0003BD4A, 0x02, 0x13],
	[0x0003BD51, 0xA0, 0x00],
	[0x0003BD52, 0xD0, 0x60],
	[0x0003BD53, 0x02, 0x13],
	[0x0003C08D, 0x10, 0x00],
	[0x0003C08E, 0xA2, 0x80],
	[0x0003C08F, 0x05, 0x16],
	[0x0003C096, 0x10, 0x00],
	[0x0003C097, 0xA2, 0x80],
	[0x0003C098, 0x05, 0x16],
	[0x0003C0B1, 0x10, 0x00],
	[0x0003C0B2, 0xA2, 0x80],
	[0x0003C0B3, 0x05, 0x16],
	[0x0003C0BA, 0x10, 0x00],
	[0x0003C0BB, 0xA2, 0x80],
	[0x0003C0BC, 0x05, 0x16],
	[0x0003C0CC, 0xA0, 0x00],
	[0x0003C0CD, 0xD0, 0x60],
	[0x0003C0CE, 0x02, 0x13],
	[0x0003C0F9, 0x10, 0x00],
	[0x0003C0FA, 0xA2, 0x80],
	[0x0003C0FB, 0x05, 0x16],
	[0x000633C2, 0xB9, 0xE9],
	[0x000633C3, 0x18, 0xCD],
	[0x000633C4, 0x00, 0x3B],
	[0x000633C5, 0x00, 0x02],
	[0x000634E2, 0xC0, 0x00],
	[0x000634E3, 0x02, 0x2C],
	[0x0006EF16, 0x40, 0x00],
	[0x0006EF17, 0xC0, 0x00],
	[0x0006EF18, 0x02, 0x16],
	[0x0006EF31, 0x40, 0x00],
	[0x0006EF32, 0xC0, 0x00],
	[0x0006EF33, 0x02, 0x16],
	[0x0006EF3F, 0x83, 0x66],
	[0x0006EF40, 0xF8, 0x3D],
	[0x0006EF41, 0x78, 0x00],
	[0x0006EF42, 0x75, 0x78],
	[0x0006EF43, 0xD0, 0x75],
	[0x0006EF44, 0x5A, 0xCF],
	[0x0006EF45, 0x59, 0x5A],
	[0x0006EF46, 0x5B, 0x59],
	[0x0006EF47, 0xC3, 0x5B],
	[0x0006EF48, 0x8D, 0xC3],
	[0x0006EF66, 0x40, 0x00],
	[0x0006EF67, 0xC0, 0x00],
	[0x0006EF68, 0x02, 0x16],
	[0x0006EF85, 0x40, 0x00],
	[0x0006EF86, 0xC0, 0x00],
	[0x0006EF87, 0x02, 0x16],
	[0x0006EF92, 0x40, 0x00],
	[0x0006EF93, 0xC0, 0x00],
	[0x0006EF94, 0x02, 0x16],
	[0x0006EFA0, 0x83, 0x66],
	[0x0006EFA1, 0xF8, 0x3D],
	[0x0006EFA2, 0x78, 0x00],
	[0x0006EFA3, 0x75, 0x78],
	[0x0006EFA4, 0xBF, 0x75],
	[0x0006EFA5, 0x5A, 0xBE],
	[0x0006EFA6, 0x59, 0x5A],
	[0x0006EFA7, 0x5B, 0x59],
	[0x0006EFA8, 0xC3, 0x5B],
	[0x0006EFA9, 0x8D, 0xC3],
	[0x0006EFBA, 0x40, 0x00],
	[0x0006EFBB, 0xC0, 0x00],
	[0x0006EFBC, 0x02, 0x16],
	[0x0006EFC3, 0x09, 0x08],
	[0x0006EFC6, 0x40, 0x00],
	[0x0006EFC7, 0xC0, 0x00],
	[0x0006EFC8, 0x02, 0x16],
	[0x0006EFCA, 0x5A, 0xEB],
	[0x0006EFCB, 0x5B, 0x21],
	[0x0006EFCC, 0xC3, 0x83],
	[0x0006EFCD, 0x83, 0xC0],
	[0x0006EFCE, 0xC0, 0x04],
	[0x0006EFCF, 0x04, 0x66],
	[0x0006EFD0, 0x83, 0x3D],
	[0x0006EFD1, 0xF8, 0x00],
	[0x0006EFD7, 0x40, 0x00],
	[0x0006EFD8, 0xC0, 0x00],
	[0x0006EFD9, 0x02, 0x16],
	[0x0006EFDF, 0xED, 0xEC],
	[0x0006EFF9, 0x40, 0x00],
	[0x0006EFFA, 0xC0, 0x00],
	[0x0006EFFB, 0x02, 0x16],
	[0x0006F002, 0x27, 0x25],
	[0x0006F005, 0x40, 0x00],
	[0x0006F006, 0xC0, 0x00],
	[0x0006F007, 0x02, 0x16],
	[0x0006F015, 0x40, 0x00],
	[0x0006F016, 0xC0, 0x00],
	[0x0006F017, 0x02, 0x16],
	[0x0006F022, 0x40, 0x00],
	[0x0006F023, 0xC0, 0x00],
	[0x0006F024, 0x02, 0x16],
	[0x0006F026, 0x5E, 0xEB],
	[0x0006F027, 0x5A, 0x21],
	[0x0006F028, 0x5B, 0x83],
	[0x0006F029, 0xC3, 0xC2],
	[0x0006F02A, 0x83, 0x04],
	[0x0006F02B, 0xC2, 0x66],
	[0x0006F02C, 0x04, 0x81],
	[0x0006F02D, 0x83, 0xFA],
	[0x0006F02E, 0xFA, 0x00],
	[0x0006F034, 0x40, 0x00],
	[0x0006F035, 0xC0, 0x00],
	[0x0006F036, 0x02, 0x16],
	[0x0006F03B, 0xEE, 0xEC],
	[0x00071CF7, 0x70, 0x00],
	[0x00071CF8, 0xC4, 0x70],
	[0x00071CF9, 0x02, 0x17],
	[0x000721A1, 0x70, 0x00],
	[0x000721A2, 0xC4, 0x70],
	[0x000721A3, 0x02, 0x17],
	[0x000721C5, 0x40, 0x00],
	[0x000721C6, 0xC0, 0x00],
	[0x000721C7, 0x02, 0x16],
	[0x000721CA, 0x1E, 0x00],
	[0x000721CB, 0x00, 0x1E],
	[0x000755AA, 0xA0, 0x00],
	[0x000755AB, 0xD0, 0x60],
	[0x000755AC, 0x02, 0x13],
	[0x00078205, 0xE0, 0x00],
	[0x00078206, 0xA1, 0x00],
	[0x00078207, 0x03, 0x09],
	[0x0007820A, 0x40, 0x00],
	[0x0007820B, 0x01, 0x70],
	[0x0007820C, 0x05, 0x18],
	[0x000782A2, 0xE0, 0x00],
	[0x000782A3, 0xA1, 0x00],
	[0x000782A4, 0x03, 0x09],
	[0x000782CF, 0xE0, 0x00],
	[0x000782D0, 0xA1, 0x00],
	[0x000782D1, 0x03, 0x09],
	[0x000782E5, 0x80, 0x00],
	[0x000782E6, 0x00, 0x04],
	[0x000784E5, 0xA0, 0x00],
	[0x000784E6, 0xD0, 0x60],
	[0x000784E7, 0x02, 0x13],
	[0x000784F7, 0x01, 0x80],
	[0x00078512, 0xE0, 0x00],
	[0x00078513, 0xA1, 0x00],
	[0x00078514, 0x03, 0x09],
	[0x00078523, 0x80, 0x00],
	[0x00078524, 0x00, 0x04],
	[0x0007853D, 0x40, 0x00],
	[0x0007853E, 0x01, 0x70],
	[0x0007853F, 0x05, 0x18],
	[0x00078545, 0x50, 0xFA],
	[0x00078559, 0xE0, 0x00],
	[0x0007855A, 0xA1, 0x00],
	[0x0007855B, 0x03, 0x09],
	[0x00078D23, 0xA0, 0x00],
	[0x00078D24, 0x00, 0xE0],
	[0x00078D25, 0x03, 0x14],
	[0x00079A7A, 0x10, 0x00],
	[0x00079A7B, 0xA2, 0x80],
	[0x00079A7C, 0x05, 0x16],
	[0x00079A8D, 0x10, 0x00],
	[0x00079A8E, 0xC0, 0x70],
	[0x00079A8F, 0x05, 0x17],
	[0x00079E6E, 0x10, 0x00],
	[0x00079E6F, 0xC0, 0x70],
	[0x00079E70, 0x05, 0x17],
	[0x0007A2D4, 0x10, 0x00],
	[0x0007A2D5, 0xA2, 0x80],
	[0x0007A2D6, 0x05, 0x16],
	[0x0007A2F8, 0x10, 0x00],
	[0x0007A2F9, 0xA2, 0x80],
	[0x0007A2FA, 0x05, 0x16],
	[0x0007A320, 0x10, 0x00],
	[0x0007A321, 0xA2, 0x80],
	[0x0007A322, 0x05, 0x16],
	[0x0007A325, 0x10, 0x00],
	[0x0007A326, 0xA2, 0x80],
	[0x0007A327, 0x05, 0x16],
	[0x0007A3F8, 0xA0, 0x00],
	[0x0007A3F9, 0xD0, 0x60],
	[0x0007A3FA, 0x02, 0x13],
	[0x0007A575, 0xA0, 0x00],
	[0x0007A576, 0xD0, 0x60],
	[0x0007A577, 0x02, 0x13],
	[0x0007A602, 0x10, 0x00],
	[0x0007A603, 0xA2, 0x80],
	[0x0007A604, 0x05, 0x16],
	[0x0007A633, 0xA0, 0x00],
	[0x0007A634, 0xD0, 0x60],
	[0x0007A635, 0x02, 0x13],
	[0x0007A651, 0xA0, 0x00],
	[0x0007A652, 0xD0, 0x60],
	[0x0007A653, 0x02, 0x13],
	[0x00086F94, 0x00, 0xE8],
	[0x00086F99, 0x00, 0x59],
	[0x00086F9A, 0x00, 0x83],
	[0x00086F9B, 0x00, 0xE9],
	[0x00086F9C, 0x00, 0x09],
	[0x00086F9D, 0x00, 0x83],
	[0x00086F9E, 0x00, 0x39],
	[0x00086FA0, 0x00, 0x75],
	[0x00086FA1, 0x00, 0x0C],
	[0x00086FA2, 0x00, 0xB8],
	[0x00086FA5, 0x00, 0x2C],
	[0x00086FA7, 0x00, 0xE8],
	[0x00086FA8, 0x00, 0x6A],
	[0x00086FA9, 0x00, 0xB6],
	[0x00086FAA, 0x00, 0xFF],
	[0x00086FAB, 0x00, 0xFF],
	[0x00086FAC, 0x00, 0x89],
	[0x00086FAD, 0x00, 0x01],
	[0x00086FAE, 0x00, 0x8B],
	[0x00086FAF, 0x00, 0x01],
	[0x00086FB0, 0x00, 0xB9],
	[0x00086FB1, 0x00, 0x18],
	[0x00086FB5, 0x00, 0xE9],
	[0x00086FB6, 0x00, 0x0D],
	[0x00086FB7, 0x00, 0xC4],
	[0x00086FB8, 0x00, 0xFD],
	[0x00086FB9, 0x00, 0xFF]
]

LONGTICS = [
	[0x00060026, 0x09, 0x0B],
	[0x00060031, 0x09, 0x0B],
	[0x00062653, 0xC1, 0x8A],
	[0x00062654, 0xE0, 0x22],
	[0x00062655, 0x08, 0x42],
	[0x000638BB, 0xC1, 0x8A],
	[0x000638BC, 0xE2, 0x33],
	[0x000638BD, 0x08, 0x43],
	[0x00063912, 0x05, 0x43],
	[0x00063913, 0x80, 0x88],
	[0x00063914, 0x00, 0x03],
	[0x00063915, 0x00, 0x90],
	[0x00063916, 0x00, 0x90],
	[0x00063918, 0xC1, 0x90],
	[0x00063919, 0xF8, 0x90],
	[0x0006391A, 0x08, 0x90],
	[0x0006391C, 0x03, 0x23],
	[0x0006392A, 0x03, 0x04],
	[0x00063965, 0xC1, 0x8A],
	[0x00063966, 0xE0, 0x23],
	[0x00063967, 0x08, 0x43],
	[0x00063A4D, 0x6D, 0x6F],
	[0x00063B19, 0x6D, 0x6F],
	[0x000A9455, 0x00, 0x6C],
	[0x000A9456, 0x00, 0x74],
	[0x000A9465, 0x00, 0x6C],
	[0x000A9466, 0x00, 0x74],
	[0x000A9475, 0x00, 0x6C],
	[0x000A9476, 0x00, 0x74]
]

# Global constants
MENU = [
	['1', "Increase max. mouse sensitivity: 9 => 127", SENSHACK],
	['2', "Increase heap size to 32MB", HEAPSIZE],
	['3', "Picked up a medikit that you REALLY need!", MEDINEED],
	['4', "Fix fast doors reopening with wrong sound", DOORREOPEN],
	['5', "Fix fast doors make two closing sounds", FASTTWOSND],
	['6', "Ouch face fix", OUCHFACE],
	['7', "Disable 'Q' key when recording demos", NOQ],
	['8', "Use DPCHGUN/DSCHGUN for chaingunner's attack sound", DSCHGUN],
	['9', "Extended stack allocation (64KB => 512KB)", EXTSTACK],
	['10', "Enable sound pitch", SNDPITCH],
	['11', "Doom plus", DOOMPLUS],
	['12', "Long tics for demos", LONGTICS],
	['q', "--Quit this program--", None]
]
MAXLENGTH = 52
DOOMSIZE = 709905
EXENAME = "DOOM2.EXE"

# Fills the end of a string with spaces. The magic number
# must be increased if the strings used get longer.
def fill(str):
	str += (" " * (MAXLENGTH - len(str)))
	return str

# Returns a string [ PATCHED ], [ VANILLA ] or [ UNKNOWN ]
# This indicates if the EXE file has had the patch applied
def checkpatched(f, array):
	if array == None:
		return "";

	vanilla = True
	for pos in range(len(array)):
		f.seek(array[pos][0])
		if ord(f.read(1)) != array[pos][1]:
			vanilla = False

	patched = True
	for pos in range(len(array)):
		f.seek(array[pos][0])
		if ord(f.read(1)) != array[pos][2]:
			patched = False

	if vanilla == True and not patched:
		return "[ VANILLA ]"
	if patched == True and not vanilla:
		return "[ PATCHED ]"

	return "[ UNKNOWN ]"

# This function will only patch a valid EXE file
def dopatch(f, array):
	if checkpatched(f, array) == "[ VANILLA ]":
		for pos in range(len(array)):
			f.seek(array[pos][0]) 
			f.write(bytearray([array[pos][2]]))
		return

	if checkpatched(f, array) == "[ PATCHED ]":
		for pos in range(len(array)):
			f.seek(array[pos][0]) 
			f.write(bytearray([array[pos][1]]))

	return

# Main program
def main(argv):
	print("===================================================")
	print("    Vanilla Doom patcher")
	print("    Hacks for Doom2 v1.9")
	print("===================================================")

	try:
		if os.stat(EXENAME).st_size == DOOMSIZE:

			f = open(EXENAME, "r+b")

			choice = 0

			while choice != 9:
				for item in range(len(MENU)):
					print(MENU[item][0] + ".\t" + fill(MENU[item][1]) + "\t" + checkpatched(f, MENU[item][2]))

				choice = raw_input("\nPlease, enter your choice: ")

				if choice == 'q' or choice == 'Q':
					print("\nHave a nice day!  :-)\n")
					quit()

				for item in range(len(MENU)):
					if MENU[item][0] == choice:
						if MENU[item][2] != None:
							dopatch(f, MENU[item][2])

				print("")

			f.close()
		else:
			print(EXENAME + " is not " + DOOMSIZE + " bytes.");
	except (OSError, IOError) as e:
		print(e)
	pass

if __name__ == "__main__":
	main(sys.argv)


